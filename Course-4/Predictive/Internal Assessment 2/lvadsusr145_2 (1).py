# -*- coding: utf-8 -*-
"""LVADSUSR145_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sIA6fkLoesPT_0RKDCdlNSwHDgvRoB2G
"""

import pandas as pd
df=pd.read_csv('/content/Mall_Customers.csv')

df.head()

df.columns

df.isnull().sum()

#df['Gender']=df['Gender'].map({'male':0,'female':1})

df

#normalize or scaling
from sklearn.preprocessing import StandardScaler
scaler=StandardScaler()
df1=scaler.fit_transform(df['Annual Income (k$)'],df['Spending Score (1-100)'])

df.dropna(inplace=True)

from sklearn.cluster import KMeans

import matplotlib.pyplot as plt

#Elbow method
k_range = range(1,10)
sse = []
for k in k_range:
  km = KMeans(n_clusters=k)
  km.fit(df[['Annual Income (k$)','Spending Score (1-100)']])
  sse.append(km.inertia_)

plt.xlabel('Clusters')
plt.ylabel('SSE value')
plt.plot(k_range,sse,marker='.')

km = KMeans(n_clusters=3)
y_pred = km.fit_predict(df[['Annual Income (k$)','Spending Score (1-100)']])
#or
y_pred = km.fit_predict(df[])

#cluster plot
df['cluster'] = y_pred

df1 = df[df.cluster == 0]
df2 = df[df.cluster == 1]
df3 = df[df.cluster == 2]

plt.scatter(df1['Annual Income (k$)'],df1['Spending Score (1-100)'],color='green')
plt.scatter(df2['Annual Income (k$)'],df2['Spending Score (1-100)'],color='blue')
plt.scatter(df3['Annual Income (k$)'],df3['Spending Score (1-100)'],color='black')

plt.scatter(km.cluster_centers_[:,0],km.cluster_centers_[:,1],color='red',marker='*',label='centroid')
plt.xlabel('Annual Income (k$)')
plt.ylabel('Spending Score (1-100)')
plt.legend()

#Silhoutte score
silhouette_score(df, y_pred)