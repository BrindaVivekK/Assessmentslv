# -*- coding: utf-8 -*-
"""LVADSUSR145_Kotha Brinda_Vivek_lab2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lp9YPs9uhpQNhloX2JT3EzDfDN_xEpS7

**KOTHA BRINDA VIVEK**
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#import dataset
df=pd.read_csv('/content/penguins_classification.csv')

df.head()

df.isnull().sum()

df.duplicated().sum()

df.drop_duplicates()

num_cols=df.select_dtypes(include=['int64','float64'])
corr_mat=num_cols.corr()
sns.heatmap(corr_mat,annot=True)

cat_cols=df.select_dtypes(include='object')
from sklearn.preprocessing import LabelEncoder
lb_en=LabelEncoder()
for c in cat_cols:
  df[c]=lb_en.fit_transform(df[c])

df

#drop null if there
df.dropna(axis=0,inplace=True)

#again after encoding
num_cols=df.select_dtypes(include=['int64','float64'])
corr_mat=num_cols.corr()
sns.heatmap(corr_mat,annot=True)

X=df.drop(columns='species')
y=df['species']

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.3,random_state=110)

#scaling
from sklearn.preprocessing import StandardScaler
scaler=StandardScaler()
X_train_scaled=scaler.fit_transform(X_train)
X_test_scaled=scaler.transform(X_test)

from sklearn.ensemble import RandomForestClassifier
model=RandomForestClassifier()
model.fit(X_train_scaled,y_train)
y_pred=model.predict(X_test)

from sklearn.metrics import classification_report,accuracy_score
print("accuracy_score",accuracy_score(y_test,y_pred))
print("classification_report for randomforest:\n",classification_report(y_test,y_pred))



import xgboost as xgb
xgb_clf=xgb
model=xgb_clf.XGBClassifier(n_estimators=100, learning_rate=0.1, max_depth=3, random_state=42)
model.fit(X_train_scaled,y_train)
y_pred=model.predict(X_test)

from sklearn.metrics import classification_report,accuracy_score
print("accuracy_score",accuracy_score(y_test,y_pred))
print("classification_report for xgbooster model\n",classification_report(y_test,y_pred))

"""Random forest classifier(0.8 accuracy) performs well than xgbooster in this case"""