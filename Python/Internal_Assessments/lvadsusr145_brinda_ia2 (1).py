# -*- coding: utf-8 -*-
"""LVADSUSR145_BRINDA_IA2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hfTCL0qDrL6Quynn-_upbQoZKw2xCPwc
"""

#1
import numpy as np
arr=[12,23,34,45,114,56,78,90,182]
print("Maximum:",np.max(arr))
print("Minimum:",np.min(arr))
print("Sum:",np.sum(arr))
print("Mean:",np.mean(arr))
print("Median:",np.median(arr))
print("Standard deviation:",np.std(arr))

#2
health_data = np.array([[160, 70, 30],   # height, weight, age for individual 1
                        [165, 65, 35],   # height, weight, age for individual 2
                        [170, 75, 40]])  # height, weight, age for individual 3
import numpy as np
def normalize1(arr):
  while(True):
    if(np.mean(arr)==0) and(np.std(arr)==0):
      break
    else:
      arr-1

n=normalize1(health_data)

#3NA

#4
import numpy as np
arr=np.arange(15,25,24)
arr1=np.linspace(15,25,24)
print(arr1)

#5
import numpy as np
daily_closing_prices = np.array([100, 102, 98, 105, 107, 110, 108, 112, 115, 118, 120])
window_size = 5

for i in range(0,len(daily_closing_prices)-4):
  print("The sum of window", i+1,"with size 5:",end="")
  print(sum(daily_closing_prices[i:i+5]))

#6 NA

#7
import numpy as np
properties_matrix = np.array([[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]])
print(np.dmin(properties_matrix))

#8
import numpy as np
matrix = np.array([[12,23,34],
                    [1,2,4],
                    [34,3,56]])
bool_ind=np.where(matrix>5)
print(matrix[bool_ind])

#9
data = {'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']}

import pandas as pd
df=pd.DataFrame(data)
#print(df)
#filtered=df[(df['Age']>45 and df['Department']!='HR')]
filtered=df[(df['Age']>45)]
filter2=filtered[(filtered['Department']!='HR')]
#print(filtered)
print(filter2)
#df2=[filter2['Name'],filter2['City']]
df2=filter2[filter2['Name'],['City']]
print(df2)

#10
data = {'Department': ['Electronics', 'Electronics', 'Clothing', 'Clothing', 'Home Goods'],
        'Salesperson': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
        'Sales': [70000, 50000, 30000, 40000, 60000]}
import pandas as pd
df=pd.DataFrame(data)
print(df)
fil=df.groupby(df['Department']).aggregate(sum(df['Sales']))
print(fil)

#11
data = {
    'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
    'Category': ['Fruit', 'Fruit', 'Fruit', 'Fruit', 'Fruit', 'Bakery', 'Fruit'],
    'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
    'Promotion': [True, False, True, True, False, True, False]
}
import pandas as pd
df=pd.DataFrame(data)
#print(df)
filter=df[(df['Category']=="Fruit")]
print(filter)

#12 NA

#13
import pandas as pd
df=pd.read_csv('/content/sample_data/Q13_sports_team_stats.csv')
#print(df)
df['Win_Ratio']=df['Wins']/df['GamesPlayed']
#print(df['TeamID'],df['GamesPlayed'],df['Wins'],df['Win_Ratio'])
print(df)

#14
import pandas as pd
df=pd.read_csv('/content/sample_data/Q14_customer_purchases.csv')
#print(df)
filter=df[(df['Date']>df['LoyaltyProgramSignUp'])]
print(filter)
filter2=df[(df['PurchaseAmount']>=400)]
print(filter2)
#purchase amount increased and also purchases incresed only 2 customers before loyalty program sign up

#15
import pandas as pd
df=pd.read_csv('/content/sample_data/Q15_student_grades.csv')
print(df)
filter2=df[(df['Grade']<=85)]
print(filter2)
#df=df.groupby(df['Subject']).aggregate(df['Grade'])
#print(df)

#history subject has 3 sudents less than or equal to 85